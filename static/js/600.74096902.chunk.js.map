{"version":3,"file":"static/js/600.74096902.chunk.js","mappings":"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","sources":["webpack://bright-funded/./src/components/B47_GetInTouch/GetInTouch.module.scss?1e6d","components/B47_GetInTouch/GetInTouch.tsx","webpack://bright-funded/./src/components/B48_OurTeam/OurTeam.module.scss?dd14","components/B48_OurTeam/OurTeam.tsx","components/A_Pages/A19_ContactPage/ContactPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"getInTouch\":\"GetInTouch_getInTouch__6TXEk\",\"inner\":\"GetInTouch_inner__8t4C2\",\"top\":\"GetInTouch_top__xW84O\",\"titleWrapper\":\"GetInTouch_titleWrapper__WAglu\",\"pretext\":\"GetInTouch_pretext__yqsgf\",\"title\":\"GetInTouch_title__lqLsi\",\"text\":\"GetInTouch_text__dU0CO\",\"socialLinks\":\"GetInTouch_socialLinks__6qfkn\",\"link\":\"GetInTouch_link__N4j50\",\"items\":\"GetInTouch_items__-3D-h\",\"item\":\"GetInTouch_item__oa8F4\",\"iconWrapper\":\"GetInTouch_iconWrapper__VM68K\",\"right\":\"GetInTouch_right__p4M+B\",\"label\":\"GetInTouch_label__cp3SI\",\"card\":\"GetInTouch_card__7bLGc\",\"formTitle\":\"GetInTouch_formTitle__d32bG\",\"field\":\"GetInTouch_field__hdjnt\",\"optional\":\"GetInTouch_optional__YrE62\",\"textarea\":\"GetInTouch_textarea__WL0Sz\",\"btn\":\"GetInTouch_btn__0V-7Z\"};","import * as React from \"react\";\r\nimport style from \"./GetInTouch.module.scss\";\r\nimport {burgerSocialLinks} from \"../A0_App/socialLinks\";\r\nimport {svgIcons} from \"../../assets/svgIcons\";\r\nimport {FormikErrors, FormikHelpers, useFormik} from \"formik\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {ButtonCustom} from \"../common/ButtonCustom/ButtonCustom\";\r\n\r\ninterface IValues {\r\n    firstName: string\r\n    lastName: string\r\n    email: string\r\n    accountNumber: string\r\n    message: string\r\n}\r\n\r\nexport const GetInTouch = () => {\r\n    const initialValues: IValues = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        accountNumber: \"\",\r\n        message: \"\",\r\n    }\r\n\r\n    const validate = ({firstName, lastName, email, message}: IValues): FormikErrors<IValues> => {\r\n        const errors = {} as FormikErrors<IValues>;\r\n        if (!firstName) {\r\n            errors.firstName = \"First Name is required\";\r\n        }\r\n        if (!lastName) {\r\n            errors.lastName = \"Last Name is required\";\r\n        }\r\n        if (!email) {\r\n            errors.email = \"Email is required\";\r\n        }\r\n        if (email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            errors.email = \"Not a valid email\";\r\n        }\r\n        if (!message) {\r\n            errors.message = \"Message is required\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const onSubmit = async (\r\n        values: IValues,\r\n        formikHelpers: FormikHelpers<IValues>\r\n    ) => {\r\n        try {\r\n            console.log(values);\r\n        } catch (e: any) {\r\n            console.log(e.message);\r\n        } finally {\r\n            formikHelpers.resetForm();\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    });\r\n\r\n    return (\r\n        <div className={style.getInTouch}>\r\n            <div className={style.inner}>\r\n\r\n                <div className={style.top}>\r\n\r\n                    <div className={style.titleWrapper}>\r\n                        <p className={style.pretext}>\r\n                            contact us\r\n                        </p>\r\n                        <h2 className={style.title}>\r\n                            Get In <span>Touch</span>\r\n                        </h2>\r\n                    </div>\r\n\r\n                    <p className={style.text}>\r\n                        We are here to answer any question you may have.\r\n                    </p>\r\n\r\n                    <div className={style.socialLinks}>\r\n                        {\r\n                            burgerSocialLinks.map(({icon, href}, key) => (\r\n                                <a key={key}\r\n                                   href={href}\r\n                                   target=\"_blank\"\r\n                                   rel=\"noopener noreferrer nofollow\"\r\n                                   className={style.link}\r\n                                >\r\n                                    {icon}\r\n                                </a>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className={style.items}>\r\n                        <div className={style.item}>\r\n                            <div className={style.iconWrapper}>{svgIcons.clock}</div>\r\n                            <div className={style.right}>\r\n                                <p className={style.label}>Available Hours</p>\r\n                                <p className={style.text}>24/7 for Emails, Live Chat and Discord</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <div className={style.iconWrapper}>{svgIcons.label}</div>\r\n                            <div className={style.right}>\r\n                                <p className={style.label}>Address</p>\r\n                                <p className={style.text}>Raadhuisstraat 22, 1016DE, Amsterdam, The Netherlands</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <div className={style.iconWrapper}>{svgIcons.mail}</div>\r\n                            <div className={style.right}>\r\n                                <p className={style.label}>Email</p>\r\n                                <a href=\"mailto:support@brightfunded.com\"\r\n                                   className={style.link}\r\n                                >\r\n                                    support@brightfunded.com\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <form className={style.card}\r\n                      onSubmit={formik.handleSubmit}\r\n                >\r\n\r\n                    <p className={style.formTitle}>\r\n                        Have Questions?\r\n                    </p>\r\n\r\n\r\n                    <div className={style.top}>\r\n\r\n                        <TextField placeholder=\"First Name\"\r\n                                   size=\"small\"\r\n                                   {...formik.getFieldProps(\"firstName\")}\r\n                                   fullWidth\r\n                                   sx={sxField}\r\n                                   error={formik.touched.firstName && Boolean(formik.errors.firstName)}\r\n                                   helperText={formik.touched.firstName && formik.errors.firstName}\r\n                        />\r\n\r\n                        <TextField placeholder=\"Last Name\"\r\n                                   size=\"small\"\r\n                                   {...formik.getFieldProps(\"lastName\")}\r\n                                   fullWidth\r\n                                   className={style.field}\r\n                                   sx={sxField}\r\n                                   error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n                                   helperText={formik.touched.lastName && formik.errors.lastName}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <TextField placeholder=\"Email\"\r\n                               size=\"small\"\r\n                               {...formik.getFieldProps(\"email\")}\r\n                               fullWidth\r\n                               className={style.field}\r\n                               sx={sxField}\r\n                               error={formik.touched.email && Boolean(formik.errors.email)}\r\n                               helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n\r\n                    <div className={style.field}>\r\n                        <TextField placeholder=\"Account Number\"\r\n                                   size=\"small\"\r\n                                   {...formik.getFieldProps(\"accountNumber\")}\r\n                                   fullWidth\r\n                                   sx={sxField}\r\n                        />\r\n                        <p className={style.optional}>Optional</p>\r\n                    </div>\r\n\r\n                    <TextField placeholder=\"Message\"\r\n                               size=\"small\"\r\n                               {...formik.getFieldProps(\"message\")}\r\n                               fullWidth\r\n                               className={style.textarea}\r\n                               multiline={true}\r\n                               minRows={6}\r\n                               sx={sxField}\r\n                               error={formik.touched.message && Boolean(formik.errors.message)}\r\n                               helperText={formik.touched.message && formik.errors.message}\r\n                    />\r\n\r\n                    <ButtonCustom label=\"Submit\"\r\n                                  icon={svgIcons.arrow_right}\r\n                                  className={style.btn}\r\n                        // @ts-ignore\r\n                                  type=\"submit\"\r\n                    />\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst sxField = {\r\n    background: \"rgba(15, 17, 28, 0.9)\",\r\n    borderRadius: \"10px\",\r\n    \"& .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"#161A2B\",\r\n        borderRadius: \"12px\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n        borderRadius: \"12px\",\r\n        fontFamily: 'Poppins',\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"14px\",\r\n        lineHeight: \"150%\",\r\n        letterSpacing: \"-0.01em\",\r\n        color: \"#9A99AF\",\r\n        \"&:hover\": {\r\n            \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"#161A2B\",\r\n            }\r\n        },\r\n    },\r\n    \"& .MuiFormHelperText-root\": {\r\n        fontFamily: 'Poppins',\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"11px\",\r\n        lineHeight: \"150%\",\r\n        letterSpacing: \"-0.01em\",\r\n        color: \"#ff7676\",\r\n        position: \"absolute\",\r\n        left: 0,\r\n        bottom: \"-16px\",\r\n    },\r\n    \"& .MuiInputBase-root.Mui-focused\": {\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            borderColor: \"#161A2B\",\r\n        }\r\n    },\r\n    \"& .MuiInputBase-root.Mui-error\": {\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            borderColor: \"#ff7676\",\r\n        }\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ourTeam\":\"OurTeam_ourTeam__qfG2r\",\"gradientLeft\":\"OurTeam_gradientLeft__AhdmA\",\"gradientRight\":\"OurTeam_gradientRight__-iJ4C\",\"titleWrapper\":\"OurTeam_titleWrapper__WtOKO\",\"pretext\":\"OurTeam_pretext__97-RA\",\"title\":\"OurTeam_title__d7t-x\",\"btn\":\"OurTeam_btn__IxFZE\"};","import * as React from \"react\";\r\nimport style from \"./OurTeam.module.scss\";\r\nimport gradientLeft from \"../../assets/png/gradient_footer_left.png\";\r\nimport gradientRight from \"../../assets/png/gradient_footer_right.png\";\r\nimport {svgIcons} from \"../../assets/svgIcons\";\r\nimport {ButtonCustom} from \"../common/ButtonCustom/ButtonCustom\";\r\n\r\nexport const OurTeam = () => {\r\n    return (\r\n        <div className={style.ourTeam}>\r\n\r\n            <img src={gradientLeft} alt=\"\" className={style.gradientLeft}/>\r\n            <img src={gradientRight} alt=\"\" className={style.gradientRight}/>\r\n\r\n            <div className={style.titleWrapper}>\r\n                <p className={style.pretext}>\r\n                    Discord Support\r\n                </p>\r\n                <h2 className={style.title}>\r\n                    <p>Our Team Is Also Ready To Assist</p>\r\n                    <p>On <span>Discord</span></p>\r\n                </h2>\r\n            </div>\r\n\r\n            <ButtonCustom label=\"Join Our Discord\"\r\n                          href=\"https://discord.gg/9Ypd4ETZ\"\r\n                          className={style.btn}\r\n                          icon={svgIcons.discord}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import * as React from \"react\";\r\nimport {GetInTouch} from \"../../B47_GetInTouch/GetInTouch\";\r\nimport {OurTeam} from \"../../B48_OurTeam/OurTeam\";\r\n\r\nconst ContactPage = () => {\r\n    return (\r\n        <div id=\"contact-top\">\r\n            <GetInTouch/>\r\n            <OurTeam/>\r\n        </div>\r\n    )\r\n}\r\nexport default ContactPage;\r\n"],"names":["GetInTouch","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formikHelpers","wrap","_context","prev","next","console","log","e","message","resetForm","stop","_x","_x2","apply","arguments","formik","useFormik","initialValues","firstName","lastName","email","accountNumber","validate","_ref","errors","test","_jsx","className","style","children","_jsxs","burgerSocialLinks","_ref3","key","icon","href","target","rel","svgIcons","handleSubmit","TextField","_objectSpread","placeholder","size","getFieldProps","fullWidth","sx","sxField","error","touched","Boolean","helperText","multiline","minRows","ButtonCustom","label","type","background","borderRadius","borderColor","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","letterSpacing","color","position","left","bottom","OurTeam","src","gradientLeft","alt","gradientRight","id"],"sourceRoot":""}